from ...assets.core import *
from ...assets.no_pred import *
from ...assets.dataset.cc359 import *
from ...assets.cross_val.one2one import *
from ...assets.batch_iter.patch_sampling_2d import *
from ...assets.architecture.unet2d import *
from ...assets.metric.segmentation import *
from ...assets.architecture.load_and_freeze_model import *

from damri.metric import evaluate_individual_metrics_with_hm

baseline_exp_path = 'path/to/cc359_unet2d_one2all'

n_add_ids = 1
pretrained = True

split = one2one(dataset.df, val_size=val_size, n_add_ids=n_add_ids, train_on_add_only=False, seed=seed,
                train_on_source_only=True)

evaluate_individual_metrics = partial(
    evaluate_individual_metrics_with_hm,
    load_y=load_y,
    load_x=load_x,
    predict=predict,
    metrics=final_metrics,
    test_ids=test_ids,
    train_ids=train_ids,
)

run_experiment = run(
    fix_seed(seed=0xBAAAAAAD),
    lock_dir(),
    preload_model_fn(architecture=architecture, baseline_exp_path=baseline_exp_path),
    freeze_model(architecture, exclude_layers=tuple()),
    architecture.to(device),
    if_missing(predict_to_dir, output_path=test_predictions_path),
    if_missing(evaluate_individual_metrics, results_path='test_metrics'),
)
