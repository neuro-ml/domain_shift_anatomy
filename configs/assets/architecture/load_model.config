from spottunet.torch import load_model_state_fold_wise  # load_model_state_cv3_wise
from spottunet.paths import BASELINE_PATH


baseline_exp_path = BASELINE_PATH
preload_model_fn = load_model_state_fold_wise

run_experiment = run(
    fix_seed(seed=0xBAAAAAAD),
    lock_dir(),
    preload_model_fn(architecture=architecture, baseline_exp_path=baseline_exp_path,
                     n_folds=len(dataset.df.fold.unique())),
    architecture.to(device),
    if_missing(lambda p: [train_model, save_model_state(architecture, p)], saved_model_path),
    load_model_state(architecture, saved_model_path),
    if_missing(predict_to_dir, output_path=test_predictions_path),
    if_missing(evaluate_individual_metrics, results_path='test_metrics'),
)
